<div class="comments-section container">
    <h3 class="comments-title">Commentaires</h3>

    <div class="comment-form">
        <textarea id="comment-textarea" class="comment-textarea" placeholder="Écrit un commentaire..."></textarea>
        <p class="error-comment-message d-none">Ton commentaire ne peut pas être vide</p>
        <button id="submit-comment-btn" class="submit-comment-btn">Poster le commentaire</button>
    </div>

    <div id="comments-container">
        {% include 'site/article/comments-list.html.twig' %}
    </div>
</div>


<script>
document.getElementById('submit-comment-btn').addEventListener('click', function() {
    const commentText = document.getElementById('comment-textarea').value;

    if (commentText.trim() !== '') {
        fetch('{{ path('post_comment', {'slug': article.slug}) }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
            body: JSON.stringify({ comment: commentText })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const noCommentsMessage = document.querySelector('.no-comments-message');
                if (noCommentsMessage) {
                    noCommentsMessage.remove();
                }

                // Crée le nouveau commentaire avec l'ID correct
                const newComment = `
                    <div class="comment" data-id="${data.commentId}">
                        <div class="comment-content">
                            <div class="comment-author">
                                <span class="author-name">${data.username}</span>
                                <span class="comment-date">À l'instant</span>
                            </div>
                            <div class="comment-body">
                                <p class="comment-text">${commentText}</p>
                                <i class="fas fa-trash delete-icon delete-icon-comment"></i>
                            </div>
                        </div>
                    </div>
                `;

                // Ajoute le nouveau commentaire à la liste
                const commentsList = document.querySelector('.comments-list');
                commentsList.insertAdjacentHTML('beforeend', newComment);

                // Vide le textarea après l'ajout
                document.getElementById('comment-textarea').value = '';

                // Récupère l'icône de suppression du nouveau commentaire et attache l'événement de suppression
                const newIcon = commentsList.querySelector(`.comment[data-id="${data.commentId}"] .delete-icon`);
                attachDeleteEvent(newIcon);  // Assure l'attachement de l'événement de suppression à la nouvelle icône
            } else {
                window.location.href = '{{ path('app_login') }}';
            }
        });
    } else {
        const errorMessage = document.querySelector('.error-comment-message');
        errorMessage.classList.remove('d-none');
        setTimeout(() => {
            errorMessage.classList.add('d-none');
        }, 2000);
    }
});


document.querySelectorAll('.delete-icon').forEach(icon => {
    attachDeleteEvent(icon);
});




</script>
